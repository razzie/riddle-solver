#version 130

struct m3x2
{
    vec3 r0;
    vec3 r1;
};

struct Block
{
    vec4 transform;
    vec4 uvTransformR1;
    vec4 uvTransformR2;
    float z;
};

uniform Block _block;

in vec2 pos;
out vec2 vUV;
in vec2 uv;

vec4 toClipSpace(vec4 pos_1)
{
    return pos_1;
}

vec3 transform3x2(m3x2 t, vec3 v)
{
    return vec3(dot(t.r0, v), dot(t.r1, v), dot(vec3(0.0, 0.0, 1.0), v));
}

void main()
{
    vec2 p = (pos * _block.transform.xy) + _block.transform.zw;
    vec4 param = vec4(p, _block.z, 1.0);
    gl_Position = toClipSpace(param);
    m3x2 param_1 = m3x2(_block.uvTransformR1.xyz, _block.uvTransformR2.xyz);
    vec3 param_2 = vec3(uv, 1.0);
    vUV = transform3x2(param_1, param_2).xy;
}

