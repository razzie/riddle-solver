#version 300 es

layout(std140) uniform Block
{
    vec4 transform;
    vec2 pathOffset;
} _block;

layout(location = 2) in vec2 from;
layout(location = 3) in vec2 ctrl;
layout(location = 4) in vec2 to;
layout(location = 1) in float maxy;
layout(location = 0) in float corner;
out vec2 vFrom;
out vec2 vCtrl;
out vec2 vTo;

void main()
{
    vec2 from_1 = from + _block.pathOffset;
    vec2 ctrl_1 = ctrl + _block.pathOffset;
    vec2 to_1 = to + _block.pathOffset;
    float maxy_1 = maxy + _block.pathOffset.y;
    float c = corner;
    vec2 pos;
    if (c >= 0.375)
    {
        c -= 0.5;
        pos.y = maxy_1 + 1.0;
    }
    else
    {
        pos.y = min(min(from_1.y, ctrl_1.y), to_1.y) - 1.0;
    }
    if (c >= 0.125)
    {
        pos.x = max(max(from_1.x, ctrl_1.x), to_1.x) + 1.0;
    }
    else
    {
        pos.x = min(min(from_1.x, ctrl_1.x), to_1.x) - 1.0;
    }
    vFrom = from_1 - pos;
    vCtrl = ctrl_1 - pos;
    vTo = to_1 - pos;
    pos = (pos * _block.transform.xy) + _block.transform.zw;
    gl_Position = vec4(pos, 1.0, 1.0);
}

